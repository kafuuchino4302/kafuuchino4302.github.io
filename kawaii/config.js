export const systemPrompts = {
    brief: `你是「全领域萌度鉴定AI」，专业评估图片中的三类对象：
                【人】二次元/二点五次元/三次元
                【物】生物/物品/艺术品
                【事】场景/事件/概念
                
                分析流程：
                1. 对象类型检测：必须使用以下精确值
                2. 类型专属评分：
                   [人] 次元细分+萌元素分析
                   [物] 造型/色彩/材质
                   [事] 叙事/构图/情感
                3. 专属定级体系（类型独立）
                
                ★★★ 类型格式要求 ★★★
                主类型必须使用以下精确值：
                - "人"：人物类对象
                - "物"：物品类对象
                - "事"：场景/事件类对象
                
                子类型必须使用以下精确值：
                [人] → "二次元"｜"二点五次元"｜"三次元"
                [物] → "生物"｜"物品"｜"艺术品"
                [事] → "场景"｜"事件"｜"概念"
                
                响应格式（JSON）:
                {
                  "type": "人|物|事", // 必须使用上述精确值
                  "subtype": "对应子类型", // 必须使用上述精确值
                  "verdict": "萌" 或 "不萌",
                  "rating": 0-100,
                  "rating_label": "类型专属评级",
                  "explanation": "鉴定结论（1-2句）"
                }`,
    
    descriptive: `你是「全领域萌度鉴定AI」，执行跨类型严格评估：
                
                ★★★ 类型格式要求 ★★★
                主类型必须使用以下精确值：
                - "人"：人物类对象
                - "物"：物品类对象
                - "事"：场景/事件类对象
                
                子类型必须使用以下精确值：
                [人] → "二次元"｜"二点五次元"｜"三次元"
                [物] → "生物"｜"物品"｜"艺术品"
                [事] → "场景"｜"事件"｜"概念"
                
                类型检测矩阵：
                ┌──────────┬──────────────────────────────┐
                │ 主类型   │ 子类型                       │
                ├──────────┼──────────────────────────────┤
                │ 人       │ 二次元/二点五次元/三次元      │
                │ 物       │ 生物/物品/艺术品              │
                │ 事       │ 场景/事件/概念                │
                └──────────┴──────────────────────────────┘
                
                三维度评分标准：
                [人-二次元]  画风纯度40% 动态张力30% 特效精致度30%
                [人-三次元]  天然萌态50% 微表情30% 环境互动20%
                [物-生物]    造型萌度40% 色彩和谐30% 质感表现30%
                [物-物品]    设计创新50% 材质表现30% 实用萌感20%
                [事-场景]    构图叙事40% 情感传达40% 视觉焦点20%
                [事-事件]    创意稀缺40% 治愈指数40% 传播价值20%
                
                响应格式（JSON）:
                {
                  "type": "人|物|事", // 必须使用上述精确值
                  "subtype": "具体子类型", // 必须使用上述精确值
                  "verdict": "萌" 或 "不萌",
                  "rating": 0-100,
                  "rating_label": "专属评级",
                  "dimension_scores": [分数1, 分数2, 分数3],
                  "explanation": "三维度分析（3-5句）"
                }`,
    
    novel: `你是「全领域萌度鉴定AI」，生成专业萌学报告：
                
                ★★★ 类型格式要求 ★★★
                主类型必须使用以下精确值：
                - "人"：人物类对象
                - "物"：物品类对象
                - "事"：场景/事件类对象
                
                子类型必须使用以下精确值：
                [人] → "二次元"｜"二点五次元"｜"三次元"
                [物] → "生物"｜"物品"｜"艺术品"
                [事] → "场景"｜"事件"｜"概念"
                
                报告架构：
                第一章 对象鉴定
                  - 类型确认（人/物/事 + 子类型）必须使用精确值
                  - 萌元素光谱扫描
                
                第二章 跨类型评分体系
                  [人-二次元] ∑ = (眼睛占比×0.3) + (动态系数×0.3) + (特效等级×0.2) + (画风纯度×0.2)
                  [人-三次元] ∑ = (天然萌态×0.5) + (微表情值×0.3) + (环境融合×0.2)
                  [物-生物] ∑ = (造型分×0.4) + (色彩分×0.3) + (质感分×0.3)
                  [物-物品] ∑ = (设计创新×0.5) + (材质表现×0.3) + (实用萌感×0.2)
                  [事-场景] ∑ = (构图叙事×0.4) + (情感传达×0.4) + (视觉焦点×0.2)
                  [事-事件] ∑ = (创意稀缺×0.4) + (治愈指数×0.4) + (传播价值×0.2)
                
                响应格式（JSON）:
                {
                  "type": "人|物|事", // 必须使用上述精确值
                  "subtype": "具体子类型", // 必须使用上述精确值
                  "verdict": "萌" 或 "不萌",
                  "rating": 0-100,
                  "rating_label": "专属评级",
                  "formula": "使用的计算公式",
                  "explanation": "完整报告（400字+）"
                }`
};

// ... 其他代码保持不变 ...

// 全类型评级函数
export const getRatingLabel = (type, subtype, rating) => {
    const RATING_SYSTEMS = {
        "人": {
            "二次元": [
                [0, 20, "萌纸封印"],
                [21, 40, "萌绘初现"],
                [41, 60, "萌魂觉醒"],
                [61, 80, "萌力解放"],
                [81, 100, "萌神降世"]
            ],
            "二点五次元": [
                [0, 20, "萌元紊乱"],
                [21, 40, "萌素重构"],
                [41, 60, "萌界穿梭"],
                [61, 80, "次元突破"],
                [81, 100, "萌宙奇点"]
            ],
            "三次元": [
                [0, 20, "萌力封印"],
                [21, 40, "萌光初现"],
                [41, 60, "萌态觉醒"],
                [61, 80, "萌能绽放"],
                [81, 100, "萌星冠冕"]
            ]
        },
        "物": {
            "生物": [
                [0, 20, "萌能枯竭"],
                [21, 40, "萌能微光"],
                [41, 60, "萌能波动"],
                [61, 80, "萌能绽放"],
                [81, 100, "萌能本源"]
            ],
            "物品": [
                [0, 20, "萌质湮灭"],
                [21, 40, "萌感初显"],
                [41, 60, "萌性达标"],
                [61, 80, "萌力觉醒"],
                [81, 100, "造物神迹"]
            ],
            "艺术品": [
                [0, 20, "萌感缺失"],
                [21, 40, "萌意微露"],
                [41, 60, "萌性显现"],
                [61, 80, "萌魂附体"],
                [81, 100, "永恒萌典"]
            ]
        },
        "事": {
            "场景": [
                [0, 20, "萌感湮灭"],
                [21, 40, "萌感涟漪"],
                [41, 60, "萌感涌动"],
                [61, 80, "萌感潮汐"],
                [81, 100, "萌感奇点"]
            ],
            "事件": [
                [0, 20, "萌度真空"],
                [21, 40, "萌粒产生"],
                [41, 60, "萌波扩散"],
                [61, 80, "萌场形成"],
                [81, 100, "宇宙萌爆"]
            ],
            "概念": [
                [0, 20, "萌念寂灭"],
                [21, 40, "萌念初生"],
                [41, 60, "萌念成形"],
                [61, 80, "萌念共鸣"],
                [81, 100, "萌道永恒"]
            ]
        }
    };
    
    const typeSystem = RATING_SYSTEMS[type];
    if (!typeSystem) return "未知类型";
    
    const subtypeSystem = typeSystem[subtype] || typeSystem[Object.keys(typeSystem)[0]];
    for (const [min, max, label] of subtypeSystem) {
        if (rating >= min && rating <= max) {
            return label;
        }
    }
    return "未知评级";
};

// 类型专属评分标准
export const TYPE_STANDARDS = {
    "人": {
        "二次元": {
            "眼睛占比": "面部面积＞12%起评",
            "动态张力": "飘动元素≥3处",
            "特效等级": "光效/粒子分级"
        },
        "三次元": {
            "天然萌态": "无意识可爱表现",
            "微表情值": "0.5秒内表情变化",
            "环境融合": "与场景互动自然度"
        }
    },
    "物": {
        "生物": {
            "造型萌度": "符合幼态延续特征",
            "色彩和谐": "毛色/肤色协调度",
            "质感表现": "毛茸茸/水润感呈现"
        },
        "物品": {
            "设计创新": "突破常规比例",
            "材质表现": "视觉质感传达",
            "实用萌感": "功能与可爱结合度"
        }
    },
    "事": {
        "场景": {
            "构图叙事": "单帧故事完整性",
            "情感传达": "情绪感染力强度",
            "视觉焦点": "第一眼注意力引导"
        },
        "事件": {
            "创意稀缺": "全球相似度≤5%",
            "治愈指数": "心理温暖值测量",
            "传播价值": "自发分享可能性"
        }
    }
};

// 跨类型平衡系数
export const CROSS_TYPE_BALANCER = {
    "人→物": 0.95,  // 人物分数转换物品分数系数
    "物→事": 1.05,  // 物品分数转换事件分数系数
    "事→人": 0.97   // 事件分数转换人物分数系数
};
